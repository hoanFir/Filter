<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <filter>
        <filter-name>first</filter-name>
        <filter-class>net.filter.FirstFilter</filter-class>
        <init-param>
            <param-name>param</param-name>
            <param-value>value</param-value>
        </init-param>
    </filter>

    <!--<filter-mapping>-->
        <!--<filter-name>first</filter-name>-->
        <!--&lt;!&ndash; 拦截所有的url &ndash;&gt;-->
        <!--<url-pattern>/*</url-pattern>-->
        <!--<dispatcher>REQUEST</dispatcher>-->
    <!--</filter-mapping>-->

    <!-- filter-url-pattern的配置 -->
    <!--
        以“/”字符开头，并以“/*”结尾的字符串用于路径映射
        以“*.”开头的字符串用于扩展名映射，例如过滤*.jsp

        空字符串“”用于指定精确映射应用程序context root的URL模式，例如过滤从http://www.baidu.com/来的请求
        字符串仅有“/”字符时，表示应用程序“默认”的servlet，在这种情况下，servlet路径时请求url去掉context路径，且路径信息为null
        -->

    <!-- filter-dispatch 访问方式的配置 -->
    <!--
        Request：默认值，代表直接访问某个资源时执行的filter
        Forward：转发时才执行filter
        Include：包含资源时执行filter
        Error：发生错误时 进行跳转时执行filter
        Async：异步servlet时使用
        -->
    <filter-mapping>
        <filter-name>first</filter-name>

        <!--<url-pattern>/net/filter/*</url-pattern>-->
        <url-pattern>*.jsp</url-pattern>

        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!--
        注解方式
        @WebFilter(filterName="FirstFilter", urlPatterns="/*", dispatcherTypes=DispatcherType.REQUEST)
         -->
</web-app>